plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.40"
    id "com.github.ben-manes.versions" version "0.21.0"
    id "com.jfrog.bintray" version "1.8.4"
    id "io.gitlab.arturbosch.detekt" version "1.0.0-RC14"
    id "java"
    id "jacoco"
    id "maven-publish"
    id "com.github.dcendents.android-maven" version "1.5"
}

allprojects {
    version '2.0.0'
    group 'com.apurebase'

    apply plugin: 'kotlin'
    apply plugin: 'jacoco'
    apply plugin: "io.gitlab.arturbosch.detekt"

    repositories {
        jcenter()
    }

    ext {
        junit_version = '5.3.2'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    dependencies {
        testCompile "org.yaml:snakeyaml:1.24"
        testCompile "org.jmockit:jmockit:1.46"
        testCompile group: 'org.amshove.kluent', name: 'kluent', version: '1.51'
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit_version
        testCompile "io.strikt:strikt-core:0.21.1"
        testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    }

    detekt {
        filters = ".*/resources/.*,.*/build/.*"
        config = files("../detekt.yml")
        input = files("src/main/kotlin")
    }

    test {
        useJUnitPlatform {
            excludeTags 'slow'
            includeEngines 'junit-jupiter'
        }

        testLogging {
            events "failed"
            exceptionFormat "full"
        }

        failFast = false

        doFirst {
            def jMockit = configurations.testCompile.find {
                it.name.startsWith("jmockit-")
            }
            jvmArgs "-javaagent:${jMockit}"
        }
    }
}

